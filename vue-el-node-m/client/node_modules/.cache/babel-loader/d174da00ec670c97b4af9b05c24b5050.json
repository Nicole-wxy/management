{"remainingRequest":"C:\\Users\\11219\\Desktop\\money-management\\vue-el-node-m\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\11219\\Desktop\\money-management\\vue-el-node-m\\client\\src\\http.js","dependencies":[{"path":"C:\\Users\\11219\\Desktop\\money-management\\vue-el-node-m\\client\\src\\http.js","mtime":1569948545931},{"path":"C:\\Users\\11219\\Desktop\\money-management\\vue-el-node-m\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\11219\\Desktop\\money-management\\vue-el-node-m\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport router from \"./router\";\nimport { Message, Loading } from 'element-ui';\nvar loading; //开始动画\n\nfunction starLoading() {\n  loading = Loading.service({\n    lock: true,\n    text: \"拼命加载中\",\n    spinner: \"el-icon-loading\",\n    background: \"rgba(0, 0, 0, 0.8)\"\n  });\n} //结束动画\n\n\nfunction endLoading() {\n  loading.close();\n} //请求拦截\n\n\naxios.interceptors.request.use(function (config) {\n  //加载动画\n  starLoading();\n\n  if (localStorage.eleToken) {\n    config.headers.Authorization = localStorage.eleToken;\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); //响应拦截\n\naxios.interceptors.response.use(function (response) {\n  //结束动画\n  endLoading();\n  return response;\n}, function (error) {\n  endLoading();\n  Message.error({\n    message: \"注册失败\"\n  });\n  var status = error.response.status;\n\n  if (status == 401) {\n    Message.error({\n      message: \"token失效，请重新登录\"\n    });\n    localStorage.removeItem('eleToken');\n    router.push('/login');\n  }\n\n  return Promise.reject(error);\n});\nexport default axios;",{"version":3,"sources":["C:\\Users\\11219\\Desktop\\money-management\\vue-el-node-m\\client\\src\\http.js"],"names":["axios","router","Message","Loading","loading","starLoading","service","lock","text","spinner","background","endLoading","close","interceptors","request","use","config","localStorage","eleToken","headers","Authorization","error","Promise","reject","response","message","status","removeItem","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,YAAjC;AAEA,IAAIC,OAAJ,C,CACA;;AACA,SAASC,WAAT,GAAuB;AACnBD,EAAAA,OAAO,GAAGD,OAAO,CAACG,OAAR,CAAgB;AACtBC,IAAAA,IAAI,EAAE,IADgB;AAEtBC,IAAAA,IAAI,EAAE,OAFgB;AAGtBC,IAAAA,OAAO,EAAE,iBAHa;AAItBC,IAAAA,UAAU,EAAE;AAJU,GAAhB,CAAV;AAMH,C,CACD;;;AACA,SAASC,UAAT,GAAsB;AAClBP,EAAAA,OAAO,CAACQ,KAAR;AACH,C,CACD;;;AACAZ,KAAK,CAACa,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAAC,MAAM,EAAI;AACrC;AACAX,EAAAA,WAAW;;AACX,MAAIY,YAAY,CAACC,QAAjB,EAA2B;AACvBF,IAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA+BH,YAAY,CAACC,QAA5C;AACH;;AACD,SAAOF,MAAP;AACH,CAPD,EAOG,UAAAK,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CATD,E,CAUA;;AACArB,KAAK,CAACa,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CAAgC,UAAAS,QAAQ,EAAI;AACxC;AACAb,EAAAA,UAAU;AACV,SAAOa,QAAP;AACH,CAJD,EAIG,UAAAH,KAAK,EAAI;AACRV,EAAAA,UAAU;AACVT,EAAAA,OAAO,CAACmB,KAAR,CAAc;AACVI,IAAAA,OAAO,EAAE;AADC,GAAd;AAFQ,MAKAC,MALA,GAKWL,KAAK,CAACG,QALjB,CAKAE,MALA;;AAMR,MAAIA,MAAM,IAAI,GAAd,EAAmB;AACfxB,IAAAA,OAAO,CAACmB,KAAR,CAAc;AACVI,MAAAA,OAAO,EAAE;AADC,KAAd;AAGAR,IAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACA1B,IAAAA,MAAM,CAAC2B,IAAP,CAAY,QAAZ;AACH;;AACD,SAAON,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAlBD;AAmBA,eAAerB,KAAf","sourcesContent":["import axios from 'axios'\r\nimport router from './router'\r\nimport { Message, Loading } from 'element-ui'\r\n\r\nlet loading\r\n//开始动画\r\nfunction starLoading() {\r\n    loading = Loading.service({\r\n        lock: true,\r\n        text: \"拼命加载中\",\r\n        spinner: \"el-icon-loading\",\r\n        background: \"rgba(0, 0, 0, 0.8)\"\r\n    })\r\n}\r\n//结束动画\r\nfunction endLoading() {\r\n    loading.close()\r\n}\r\n//请求拦截\r\naxios.interceptors.request.use(config => {\r\n    //加载动画\r\n    starLoading()\r\n    if (localStorage.eleToken) {\r\n        config.headers.Authorization = localStorage.eleToken\r\n    }\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n})\r\n//响应拦截\r\naxios.interceptors.response.use(response => {\r\n    //结束动画\r\n    endLoading()\r\n    return response\r\n}, error => {\r\n    endLoading()\r\n    Message.error({\r\n        message: \"注册失败\"\r\n    })\r\n    const { status } = error.response\r\n    if (status == 401) {\r\n        Message.error({\r\n            message: \"token失效，请重新登录\"\r\n        })\r\n        localStorage.removeItem('eleToken')\r\n        router.push('/login')\r\n    }\r\n    return Promise.reject(error)\r\n})\r\nexport default axios"]}]}